/*
foreach a parameterized generator
*/
fn count<T>(n : T, yield : fn(T, fn()), ret : fn()) {
    fn loop(i : T) {
        if (true)
            yield(i, lambda() { loop(i); });
        else
            ret();
    }
    loop(n);
}

fn main() -> int {
    b : float = 2.0f;
    foreach (x : float  <- count(10.0f)) {
        b += x;
    }

    a : int = 0;
    x : int = 42;
    foreach (x <- count(10)) {
        a += x;
    }
    return a;
}
