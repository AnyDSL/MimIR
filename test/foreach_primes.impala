/*
foreach that adds all primes smaller than 100
expected result: 1060
*/
fn primes(n : int, yield : fn(int, fn()), ret : fn()) {
    if (n < 2) 
        ret();

    yield(2, lambda() {
        fn loop(i : int) {
            fn inner_loop(j : int) {
                if (j < i) {
                    if (i % j == 0)
                        loop(i + 1);
                    else
                        inner_loop(j + 1);
                }
                yield(i, lambda() { loop(i+1); });
            }
            if (i < n)
                inner_loop(2);
            else
                ret();
        }
        loop(3);
    });
}

fn main() -> int {
    result : int = 0;
    foreach (p : int <- primes(100)) {
        result += p;
    }
    return result;
}
