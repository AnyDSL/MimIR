/*
 * class Num a where
 *  + : fn(a, a, fn(a))
 *  - : fn(a, a, fn(a))
 */

fn pyth<T>(Num : sigma(fn(T, T, fn(T)), fn(T, T, fn(T))), num1 : T, num2 : T) -> T {
    add : fn(T, T, fn(T)) = Num[0];
    mul : fn(T, T, fn(T)) = Num[1];
    return add(mul(num1, num1), mul(num2, num2));
}

fn add(a : int, b : int) -> int { return a + b; }
fn mul(a : int, b : int) -> int { return a * b; }

fn main(i : int, j : int) -> int {
    Num : sigma(fn(int, int, fn(int)), fn(int, int, fn(int))) = #(add, mul);
    return pyth(Num, i, j);
}
