fn primes<T>(n : int, t : T, yield : fn(int, T, fn(T)), ret : fn(T)) {
    if (n < 2) 
        ret(t);

    yield(2, t, |t : T| {
        fn loop(i : int, t : T) {
            fn inner_loop(j : int) {
                if (j < i) {
                    if (i % j == 0)
                        loop(i + 1, t);
                    else
                        inner_loop(j + 1);
                }
                yield(i, t, |t : T| { loop(i+1, t); });
            }
            if (i < n)
                inner_loop(2);
            else
                ret(t);
        }
        loop(3, t);
    });
}

fn main(main_ret : fn((int, int))) {
    primes(100, (0, 42),
        |p : int, result : (int, int), next : fn((int, int))| {
            next(result);
        },
        |result : (int, int)| {
            main_ret(result);
        }
    );
}
