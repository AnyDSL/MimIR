fn generic_while<L, B>(l : L,
                          head : fn(L, fn(B, bool)), 
                          body : fn(B, fn(L)), 
                          next : fn(B)) 
{
    head(l,
        |b : B, cond : bool| {
            if (cond)
                generic_while(body(b), head, body, next);
            else
                next(b);
        }
    );
}

fn main(ret_main : fn(int))
{
    return generic_while(
        0, // counter
        |i : int, ret : fn(int, bool)| { ret(i, i < 42); },
        |i : int| -> int { return i + 1; });
}
