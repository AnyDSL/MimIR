extern fn f(a : int) -> int {
    var i : int = 22;
    var j : int = 22;
    var b : bool = i == 23;

    val g : fn(int) -> int = |k : int| -> int { 
        fn z(x : int) -> int { return x; }
        return i + j + a + z(k); 
    };

    if (a == 0)
        return g(23);
    else
        return g(g(42));
}

extern fn g(i : int) -> int {
    return |j : int| -> int { return j + 42 + i; }(23);
}

fn foo(h : fn(int, fn(int))) -> int {
    return h(24);
}

extern fn bar(a : int) -> int {
    val k : fn(int) -> int = |b : int| -> int {
        return a + b;
    };
    return foo(k);
}
