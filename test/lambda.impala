fn extern f(a : int) -> int {
    i : int = 22;
    j : int = 22;
    b : bool = i == 23;

    g : fn(int) -> int = lambda(k : int) -> int { 
        fn z(x : int) -> int { return x; }
        return i + j + a + z(k); 
    };

    if (a == 0)
        return g(23);
    else
        return g(g(42));
}

fn extern g(i : int) -> int {
    return lambda(j : int) -> int { return j + 42 + i; }(23);
}

fn foo(h : fn(int, fn(int))) -> int {
    return h(24);
}

fn extern bar(a : int) -> int {
    k : fn(int) -> int = lambda(b : int) -> int {
        return a + b;
    };
    return foo(k);
}
