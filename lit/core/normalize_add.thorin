// RUN: rm -f %t.ll ; \
// RUN: %thorin %s --output-thorin - | FileCheck %s

.import core;

.lam .extern add0: .Cn [i :%Int 256, return : .Cn %Int 256] = {
    .ff,
    return (%core.wrap.add (0, 256) (i, 0 : (%Int 256)))
};

// CHECK-DAG: add0: .Cn [(%Int 256), .Cn (%Int 256)], @(_[[valId:[0-9]+]], _[[retId:[0-9]+]]) = {
// CHECK-DAG: _[[appId:[0-9]+]]: ⊥:★ = _[[etaId:[0-9]+]] _[[valId]];
// CHECK-DAG: _[[appId]]

// CHECK-DAG: _[[etaId]]: .Cn (%Int 256), @_[[etaVar:[0-9]+]] = {
// CHECK-DAG: _[[appRetId:[0-9]+]]: ⊥:★ = _[[retId]] _[[etaVar]];
// CHECK-DAG: _[[appRetId]]

.lam .extern add_lit: .Cn [return : .Cn %Int 256] = {
    .ff,
    return (%core.wrap.add (0, 256) (6 : (%Int 256), 0 : (%Int 256)))
};

// CHECK-DAG: add_lit: .Cn .Cn (%Int 256), @_[[retId:[0-9]+]] = {
// CHECK-DAG: _[[appId:[0-9]+]]: ⊥:★ = _[[etaId:[0-9]+]] 6:(%Int 256);
// CHECK-DAG: _[[appId]]

// CHECK-DAG: _[[etaId]]: .Cn (%Int 256), @_[[etaVar:[0-9]+]] = {
// CHECK-DAG: _[[appRetId:[0-9]+]]: ⊥:★ = _[[retId]] _[[etaVar]];
// CHECK-DAG: _[[appRetId]]

