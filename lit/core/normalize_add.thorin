// RUN: rm -f %t.ll ; \
// RUN: %thorin %s --output-thorin - | FileCheck %s

.import core;

.cn .extern add0 [i :%Int 256, return : .Cn %Int 256] = {
    return (%core.wrap.add (0, 256) (i, 0 : (%Int 256)))
};

// CHECK-DAG: add0 __{{[0-9]+}}::[i_[[valId:[0-9]+]]: (%Int 256), return_[[retId:[0-9]+]]: .Cn (%Int 256)]
// CHECK-DAG: _[[appId:[0-9]+]]: ⊥:★ = return_[[etaId:[0-9]+]] i_[[valId]];
// CHECK-DAG: _[[appId]]

// CHECK-DAG: return_[[etaId]] _[[etaVar:[0-9]+]]: (%Int 256)
// CHECK-DAG: return_[[appRetId:[0-9]+]]: ⊥:★ = return_[[retId]] _[[etaVar]];
// CHECK-DAG: return_[[appRetId]]

.cn .extern add_lit [return : .Cn %Int 256] = {
    return (%core.wrap.add (0, 256) (6 : (%Int 256), 0 : (%Int 256)))
};

// CHECK-DAG: add_lit __[[retId:[0-9]+]]: .Cn (%Int 256)
// CHECK-DAG: _[[appId:[0-9]+]]: ⊥:★ = __[[etaId:[0-9]+]] 6:(%Int 256);
// CHECK-DAG: _[[appId]]

// CHECK-DAG: __[[etaId]] _[[etaVar:[0-9]+]]: (%Int 256)
// CHECK-DAG: _[[appRetId:[0-9]+]]: ⊥:★ = __[[retId]] _[[etaVar]];
// CHECK-DAG: _[[appRetId]]

