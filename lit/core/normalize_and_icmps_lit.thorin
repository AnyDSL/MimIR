// RUN: rm -f %t.ll
// RUN: %thorin %s -o - | FileCheck %s

.plugin core;

.con .extern and_lit [return : .Cn .Idx 2] = {
    return (%core.bit2.and_ 0 (%core.icmp.uge (.tt, .ff), %core.icmp.ug (.tt, .ff)))
};

.con .extern and_lit2 [in: .Idx 256, return : .Cn .Idx 2] = {
    return (%core.bit2.and_ 0 (%core.icmp.uge (in, 'a'), %core.icmp.ule (in, 'a')))
};

// CHECK-DAG: and_lit _[[retId:[0-9_]+]]: .Cn .Idx 2
// CHECK-DAG: _[[etaId:[0-9_]+]] 1:(.Idx 2)

// CHECK-DAG: _[[etaId]] _[[etaVar:[0-9_]+]]: .Idx 2
// CHECK-DAG: _[[retId]] _[[etaVar]]

// CHECK-DAG: and_lit2 _{{[0-9_]+}}::[in_[[inId2:[0-9_]+]]: .Idx 256, return_[[retId2:[0-9_]+]]: .Cn .Idx 2]
// CHECK-DAG: .let _[[cmpRes2:[0-9_]+]]: .Idx 2 = %core.icmp.xyglE 256 (97:(.Idx 256), in_[[inId2]]);
// CHECK-DAG: return_[[etaId2:[0-9_]+]] _[[cmpRes2]]

// CHECK-DAG: _[[etaId2]] _[[etaVar2:[0-9_]+]]: .Idx 2
// CHECK-DAG: _[[retId2]] _[[etaVar2]]

