// RUN: %mim %s

plugin math;

rule zero_plus (mode: Nat, type: «2; Nat», b: %math.F type) : %math.arith.add(mode) (0: (%math.F type), b) => b;
rule zero_mul (mode: Nat, type: «2; Nat», b: %math.F type): %math.arith.mul(mode) (0: (%math.F type), b) => 0:(%math.F type);
rule zero_div (mode: Nat, type: «2; Nat», b: %math.F type): %math.arith.div(mode) (0: (%math.F type), b) => 0:(%math.F type);
rule zero_rem (mode: Nat, type: «2; Nat», b: %math.F type): %math.arith.rem(mode) (0: (%math.F type), b) => 0:(%math.F type);

rule one_mul (mode: Nat, type: «2; Nat», b: %math.F type): %math.arith.mul(mode) (1: (%math.F type), b) => b;

rule zero_sub (mode: Nat, type: «2; Nat», b: %math.F type): %math.arith.sub(mode) (b, 0: (%math.F type)) => 0:(%math.F type);

rule equal_add (mode: Nat, type: «2; Nat», a: %math.F type): %math.arith.add(mode) (a, a) => %math.arith.mul(mode) (2: (%math.F type), a);
rule equal_sub (mode: Nat, type: «2; Nat», a: %math.F type): %math.arith.sub(mode) (a, a) => 0:(%math.F type);
rule equal_div (mode: Nat, type: «2; Nat», a: %math.F type): %math.arith.div(mode) (a, a) => 1:(%math.F type);
