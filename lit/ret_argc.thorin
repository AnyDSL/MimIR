// RUN: rm -f %t.ll ; \
// RUN: %thorin %s --output-ll %t.ll -o - | FileCheck %s
// RUN: clang %t.ll -o %t -Wno-override-module
// RUN: %t ; test $? -eq 1
// RUN: %t 1 2 3 ; test $? -eq 4
// RUN: %t a b c d e f ; test $? -eq 7

.import mem;

.let i8  = %Int 256;
.let i32 = %Int 4294967296;
.cn .extern main(mem: %mem.M, argc: i32, argv: %mem.Ptr (%mem.Ptr (i8, 0), 0), return: .Cn [%mem.M, i32]) = return (mem, argc);

// CHECK-DAG: .cn .extern main __[[mainVarId:[0-9]+]]::[mem_[[memId:[0-9]+]]: %mem.M, argc_[[argcId:[0-9]+]]: (%Int 4294967296), %mem.Ptr (%mem.Ptr ((%Int 256), 0:.Nat), 0:.Nat), return_[[returnId:[0-9]+]]: .Cn [%mem.M, (%Int 4294967296)]] = {
// CHECK-DAG: _[[appId:[0-9]+]]: ⊥:★ = return_[[returnEtaId:[0-9]+]] (mem_[[memId]], argc_[[argcId]]);
// CHECK-DAG: _[[appId]]

// CHECK-DAG: .cn return_[[returnEtaId:[0-9]+]] _[[returnEtaVarId:[0-9]+]]: [%mem.M, (%Int 4294967296)] = {
// CHECK-DAG: _[[retAppId:[0-9]+]]: ⊥:★ = return_[[returnId]] _[[returnEtaVarId]];
// CHECK-DAG: _[[retAppId]]
