// RUN: %mim %s
plugin tensor;
plugin refly;
plugin core;

let m0 = ((1, 2), (3, 4));
let m1 = ((1, 2, 3), (4, 5, 6));

let g1 = %tensor.get @(Nat, 1, 1) (3, 0_1);
let g2 = %tensor.get @(Nat, 2, (2, 2)) (m0, (1_2, 0_2));
let g3 = %tensor.get @(Nat, 2, (2, 3)) (m1, (1_2, 2_3));

let _ = %refly.equiv.struc_eq (g1, 3);
let _ = %refly.equiv.struc_eq (g2, 3);
let _ = %refly.equiv.struc_eq (g3, 6);

let s1 = %tensor.set @(Nat, 1, 1) (3, 0_1, 5);
let s2 = %tensor.set @(Nat, 2, (2, 2)) (m0, (1_2, 0_2), 12);
let s3 = %tensor.set @(Nat, 2, (2, 3)) (m1, (1_2, 2_3), 24);

let _ = %refly.equiv.struc_eq (s1, 5);
let _ = %refly.equiv.struc_eq (s2, ((1, 2), (12, 4)));
let _ = %refly.equiv.struc_eq (s3, ((1, 2, 3), (4, 5, 24)));

fun f1 (n m: Nat): Nat = return m;

let mr1 = %tensor.map_reduce @1 @(Nat, 1) 1 @(Nat, 1, 1) (f1, 0) 0 1;
let _ = %refly.equiv.struc_eq (mr1, 0);
