// RUN: rm -f %t.ll ; \
// RUN: %thorin %s -o - --output-ll %t.ll --aggr-lam-spec | FileCheck %s
// RUN: clang %t.ll -o %t -Wno-override-module
// RUN: %t; test $? -eq 1

.plugin mem;
.plugin core;
.plugin regex;
.plugin direct;

.let Top     = ⊤:.Nat;
.let pattern = %regex.conj 2 (%regex.quant.plus  %regex.cls.w, %regex.lit '@');
.let len     = 10;

.con .extern main[mem: %mem.M, argc: .I32, argv: %mem.Ptr («⊤:.Nat; %mem.Ptr («⊤:.Nat; .I8», 0)», 0), exit : .Cn [%mem.M, .I32]] = {
    .fun match(len: .Nat)(mem: %mem.M, str: %mem.Ptr0 <<len; Char>>): [%mem.M, .Bool] =
        .let (`mem, matched, pos) = pattern (mem, str, 0:(.Idx len));
        .let end = %core.idx len 0 (%core.nat.sub (len, 1));
        return (mem, %core.bit2.and_ 0 (%core.icmp.e (pos, end), matched));

    .let (`mem, string) = %mem.alloc (<<len; Char>>, 0) mem;
    .let `mem = %mem.store (mem, string, "testasdf@\0");

    .con exiting[mem: %mem.M, ret :.Bool] = exit (mem, %core.conv.u .i32 ret);

    match len ((mem, string), exiting)
};

// CHECK-NOT: %regex.
