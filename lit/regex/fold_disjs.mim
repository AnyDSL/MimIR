// RUN: %mim %s -o - -P %S | FileCheck %s

import mem;
plugin regex;

import dont_compile.mim;

let Top = ⊤:Nat;

con extern disj(mem: %mem.M, string: %mem.Ptr (<<Top; I8>>, 0), return: Cn [%mem.M, Bool, I32]) =
    let pattern = %regex.conj (%regex.disj (%regex.cls.d, %regex.cls.D), %regex.disj (%regex.cls.w, %regex.cls.W), %regex.disj (%regex.cls.s, %regex.cls.S));
    return (pattern (mem, string, 0I32));
// CHECK: %regex.conj 2 (%regex.conj 2 ‹2; %regex.any›, %regex.any)
