// RUN: %thorin %s -o - -P %S | FileCheck %s

.import mem;
.plugin regex;

.import dont_compile.thorin;

.let i8 = .Idx 256;
.let Top = ⊤:.Nat;

.con .extern flatten_conj(mem: %mem.M, string: %mem.Ptr («Top; %core.I8», 0), return: .Cn [mem: %mem.M, matched: .Bool, match: %core.I32]) = {
    .let pattern = %regex.conj 3 (%regex.cls.d, %regex.conj 2 (%regex.cls.d, %regex.cls.d), %regex.cls.d);
    return (pattern Top (mem, string, 0:%core.I32))
    // CHECK: %regex.conj 4 ‹4; %regex.cls.d›
};
