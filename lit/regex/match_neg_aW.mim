// RUN: rm -f %t.ll ; \
// RUN: %mim %s -o - --output-ll %t.ll | FileCheck %s
// RUN: clang %t.ll -o %t -Wno-override-module
// RUN: %t "a"; test $? -eq 0
// RUN: %t "b"; test $? -eq 1
// RUN: %t "#"; test $? -eq 0
// RUN: %t "3"; test $? -eq 1

plugin mem;
plugin core;
plugin regex;
plugin direct;

let Top = ⊤:Nat;
let re  = %regex.not_ (%regex.disj (%regex.lit('a'), %regex.cls.W));

con extern main[mem: %mem.M, argc: I32, argv: %mem.Ptr («⊤:Nat; %mem.Ptr («⊤:Nat; I8», 0)», 0), exit : Cn [%mem.M, I32]] =
    (exit, match_argument) # (%core.icmp.ug (argc, 1I32)) (mem, 0I32)
    where
        con match_argument[mem: %mem.M, I32] =
            let arg1 = %mem.lea (argv, %core.idx_unsafe 1);
            let (mem, to_match) = %mem.load (mem, arg1);
            let (mem, matched, pos) = re (mem, to_match, 0:(Idx Top));
            exit (mem, %core.conv.u i32 matched);
    end;

// CHECK-NOT: %regex.
