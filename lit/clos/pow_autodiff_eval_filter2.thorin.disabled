// RUN: rm -f %t.ll
// RUN: %thorin -p clos %s --output-ll %t.ll -o -

/*
TODO: investigate and open error
plug/clos/phase/clos_conv.cpp:195: RW: pack tup_pb_745946_346616 ~> ([], tup_pb_745946_348879, ()):closure_type_348334 : closure_type_348334
:4294967295: error: cannot pass argument '([], ((.I32, aug_pow_else_745690_348490, _348192):closure_type_348380, ([], aug_pow_then_745900_348623, ()):closure_type_348692)#_348817#2:(.Idx 3))' of type '[★, ((.I32, aug_pow_else_745690_348490, _348192):closure_type_348380, ([], aug_pow_then_745900_348623, ()):closure_type_348692)#_348817#0:(.Idx 3)]' to '((.I32, aug_pow_else_745690_348490, _348192):closure_type_348380, ([], aug_pow_then_745900_348623, ()):closure_type_348692)#_348817#1:(.Idx 3)' of domain '[closure_type_348334, ((.I32, aug_pow_else_745690_348490, _348192):closure_type_348380, ([], aug_pow_then_745900_348623, ()):closure_type_348692)#_348817#0:(.Idx 3)]'
*/

.plugin core;

.con zero_pb_745910 _745912::[.I32, _745914: .Cn «2; .I32»] @(1:(.Idx 2)) = {
    .con _745911 [_745915: «2; .I32»] @(0:(.Idx 2)) = {
        _745914 _745915
    };
    _745911 ‹2; 0:(.I32)›
};
.con tup_pb_745946 _745948::[[], _745950: .Cn «2; .I32»] @(1:(.Idx 2)) = {
    .con _745947 [_745951: «2; .I32»] @(0:(.Idx 2)) = {
        _745950 _745951
    };
    _745947 ‹2; 0:(.I32)›
};
.con aug_f_745675 _745722::[_745724: .I32, _745736: .Cn [.I32, .Cn [.I32, .Cn «2; .I32»]], _745862: .Cn [[.I32, .Cn .I32], .Cn «2; .I32»]] @(0:(.Idx 2)) = {
    .con aug_pow_cont_745734 _745753::[_745755: .I32, _745773: .Cn [.I32, .Cn «2; .I32»]] @(0:(.Idx 2)) = {
        .con comp_tup_pb__745765 _745778::[_745780: .I32, _745799: .Cn «2; .I32»] @(1:(.Idx 2)) = {
            .con _745797 [_745800: «2; .I32»] @(0:(.Idx 2)) = {
                _745799 _745800
            };
            .con comp_tup_pb__cont_cont_cont_745796 _745840::[_745841: .I32, _745847: .I32] @(1:(.Idx 2)) = {
                .let _745839: .I32 = %core.wrap.mul 0 (_745755, _745780);
                .let _745846: .I32 = %core.wrap.add 0 (_745839, _745841);
                _745797 (_745846, _745847)
            };
            .let _745787: .I32 = %core.wrap.mul 0 (4:(.I32), _745780);
            _745773 (_745787, comp_tup_pb__cont_cont_cont_745796)
        };
        .let _745762: .I32 = %core.wrap.mul 0 (4:(.I32), _745755);
        _745736 (_745762, comp_tup_pb__745765)
    };
    .con tup_pb_745860 _745865::[tup_s_745867::[_745869: .I32, .Cn .I32], _745881: .Cn «2; .I32»] @(1:(.Idx 2)) = {
        .con _745879 [_745882: «2; .I32»] @(0:(.Idx 2)) = {
            _745881 _745882
        };
        .con tup_pb_cont_745878 [_745884: «2; .I32»] @(1:(.Idx 2)) = {
            _745879 _745884
        };
        _745862 ((tup_s_745867#0:(.Idx 2), ⊥:.Cn .I32), tup_pb_cont_745878)
    };
    .con aug_pow_else_745690 [.Cn [[], .Cn «2; .I32»]] @(0:(.Idx 2)) = {
        .let _745731: .I32 = %core.wrap.add 0 (4294967295:(.I32), _745724);
        aug_f_745675 (_745731, aug_pow_cont_745734, tup_pb_745860)
    };
    .con aug_pow_then_745900 [.Cn [[], .Cn «2; .I32»]] @(0:(.Idx 2)) = {
        _745736 (1:(.I32), zero_pb_745910)
    };
    .let _745944: .Idx 2 = %core.icmp.xyglE (0:(.I32), _745724);
    (aug_pow_else_745690, aug_pow_then_745900)#_745944 tup_pb_745946
};
.con tup_pb_746125 _746127::[tup_s_746133::[_746135: .I32, .Cn .I32], _746129: .Cn «2; .I32»] @(1:(.Idx 2)) = {
    .con _746126 [_746130: «2; .I32»] @(0:(.Idx 2)) = {
        _746129 _746130
    };
    _746126 (0:(.I32), tup_s_746133#0:(.Idx 2))
};
.con .extern main __746011::[mem_746034: %mem.M, .I32, %mem.Ptr (%mem.Ptr (.I8, 0), 0), return_746015: .Cn [%mem.M, .I32]] @(0:(.Idx 2)) = {
    .con return_746010 [_746016: [%mem.M, .I32]] @(0:(.Idx 2)) = {
        return_746015 _746016
    };
    .con ret_cont_745972 __745982::[r_746066: .I32, pb_745984: .Cn [.I32, .Cn «2; .I32»]] @(0:(.Idx 2)) = {
        .con pb_ret_cont_746000 __746083::[pr_a_746103: .I32, pr_b_746084: .I32] @(0:(.Idx 2)) = {
            .let _746073: .I32 = %core.wrap.mul 0 (10000:(.I32), r_746066);
            .let _746110: .I32 = %core.wrap.mul 0 (100:(.I32), pr_a_746103);
            .let _746115: .I32 = %core.wrap.add 0 (pr_b_746084, _746110);
            .let _746120: .I32 = %core.wrap.add 0 (_746073, _746115);
            return_746010 (mem_746034, _746120)
        };
        pb_745984 (1:(.I32), pb_ret_cont_746000)
    };
    aug_f_745675 (3:(.I32), ret_cont_745972, tup_pb_746125)
};
