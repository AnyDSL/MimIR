// RUN: rm -f %t.ll ; \
// RUN: %thorin -d autodiff %s --output-ll %t.ll --output-thorin - | FileCheck %s

// a call to a autodiff style function
// ./build/bin/thorin -d autodiff ./lit/autodiff/simple.thorin --output-thorin -

.import autodiff;
.import mem;
.import core;

.let I32 = .Idx 4294967296;

.cn f [a:I32, ret: .Cn [I32]] = {
    .let b = %core.wrap.add (0:.Nat, 4294967296:.Nat) (a, a);
    ret b
};

.cn .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (.Idx 256, 0:.Nat), 0:.Nat), return : .Cn [%mem.M, I32]] = {

    // .cn ret_cont r::[%autodiff.tangent_type I32] = {
    .cn ret_cont r::[I32] = {
    // .cn ret_cont [I32] = {
    // .cn ret_cont [r:I32] = {
        return (mem, r)
    };

    .let c = (43:I32);
    f (c,ret_cont)
};


    // .let b = %Wrap_mul (0:.Nat, 4294967296:.Nat) (3:I32, a);

    // .let c = f (42:I32);
    // return (mem, c)

// CHECK-DAG: .cn .extern main _{{[0-9_]+}}::[mem_[[memId:[_0-9]*]]: %mem.M, (.Idx 4294967296), %mem.Ptr (%mem.Ptr ((.Idx 256), 0:.Nat), 0:.Nat), return_[[returnId:[_0-9]*]]: .Cn [%mem.M, (.Idx 4294967296)]] = {
// CHECK-DAG: _[[appId:[_0-9]*]]: ⊥:★ = return_[[returnEtaId:[_0-9]*]] (mem_[[memId]], 42:(.Idx 4294967296));
// CHECK-DAG: _[[appId]]

// CHECK-DAG: return_[[returnEtaId]] _[[returnEtaVarId:[0-9_]+]]: [%mem.M, (.Idx 4294967296)] = {
// CHECK-DAG: return_[[retAppId:[_0-9]*]]: ⊥:★ = return_[[returnId]] _[[returnEtaVarId]];
// CHECK-DAG: return_[[retAppId]]
