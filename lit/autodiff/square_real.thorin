// RUN: rm -f %t.ll ; \
// RUN: %thorin -d tool -d direct -d autodiff %s --output-ll %t.ll --output-thorin - | FileCheck %s

.import core;
.import autodiff;
.import mem;

.let _32 = 64;
.let R32 = %core.Real _32;


.lam .extern internal_diff_core_rop_mul
    ![m:.Nat, w:.Nat] -> 
    (.Cn[[%core.Real w, %core.Real w], .Cn[%core.Real w, .Cn[%core.Real w, .Cn[%core.Real w, %core.Real w]]]])
    = { 
    .cn inner_mul_deriv_cps
        ![[a:%core.Real w, b:%core.Real w], ret:.Cn[%core.Real w, .Cn[%core.Real w, .Cn[%core.Real w, %core.Real w]]]]@(.tt)
        = { 
        .let result = %core.rop.mul (m,w) (a,b);
        .cn mul_pb ![s:(%core.Real w), pb_ret:(.Cn [%core.Real w, %core.Real w])]@(.tt) = { 
            .let lhs = %core.rop.mul (m,w) (s,b);
            .let rhs = %core.rop.mul (m,w) (s,a);
            pb_ret (lhs, rhs)
        };
        ret (result,mul_pb)
    };
    inner_mul_deriv_cps
};




.cn f [a:R32, ret: .Cn [R32]] = {
    .let b = %core.rop.mul (0, _32) (a, a);
    ret b
};

.cn g [a:R32, ret: .Cn [R32, .Cn [R32, .Cn [R32]]]] = {
    .let f_diff = %autodiff.autodiff (.Cn [R32,.Cn[R32]]) f;
    f_diff (a,ret)
};

.cn .extern test [[], ret: .Cn [[R32,R32],[R32,R32]]] = {
    .cn inner [r:R32, pb:.Cn [R32, .Cn [R32]]] = {
        .cn pb_rec p::[R32] = {
            // ret (5.0:R32)
            ret ((25.0:R32,10.0:R32),(r,p))
        };
        pb (1.0:R32, pb_rec)
    };
    g (5.0:R32, inner)


    // .cn pb_rec p::[R32] = {
    //     ret (25.0:R32,p)
    // };

    // f (5.0:R32, pb_rec)


    // ret (6.0:R32)

    // .let b = %core.rop.mul (0, _32) (2.0:R32, 3.0:R32);
    // .let b = 6.0:R32;
    // ret b
};


// CHECK-DAG: ret{{.*}}‹2;{{.*}}›
