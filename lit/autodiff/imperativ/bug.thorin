// RUN: rm -f %t.ll ; \
// RUN: %thorin -d autodiff %s --output-ll %t.ll --output-thorin - | FileCheck %s

.import core;
.import autodiff;
.import mem;
.import affine;

.let i32 = .Idx 4294967296;
.let arr_size = 100:.Nat;

.cn init [mem: %mem.M, arr : %mem.Ptr (<<100:.Nat; i32>>, 0:.Nat), offset : i32, return : .Cn [%mem.M]] = {
    .cn for_body [i : i32, mem : %mem.M, continue : .Cn [%mem.M]] = {
        .let idx_100_i = %core.bitcast ((.Idx 100), i32) i;
        .let lea = %mem.lea (arr_size, <arr_size; i32>, 0) (arr, idx_100_i);
        .let add = %core.wrap.add (0, 4294967296) (offset, i);
        .let store_mem = %mem.store (i32, 0) (mem, lea, add);
        continue(store_mem)
    };
    %affine.For (4294967296, 1, (%mem.M)) (0:i32, 100:i32, 1:i32, (mem), for_body, return)
};

.cn .extern main [mem : %mem.M, argc : i32, argv : %mem.Ptr (%mem.Ptr (.Idx 256, 0:.Nat), 0:.Nat), return : .Cn [%mem.M, i32]] = {
    .cn init_callback [mem : %mem.M] = {
        return (mem, 0:i32)
    };

    .let (alloc_mem, alloc_val) = %mem.alloc («100:.Nat; i32», 0) mem;


    init(alloc_mem, alloc_val, 0:i32, init_callback)
};
