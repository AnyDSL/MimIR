.import autodiff;
.import core;
.import debug;
.import direct;
.import mem;
.con mul_pb_635361_709211 __635376_709232::[s_635393_709277: (%core.I32), pb_ret_635378_709234: .Cn «2; (%core.I32)»] = {
    .con pb_ret_635378_709222 _709235: «2; (%core.I32)» = {
        pb_ret_635378_709234 _709235
    };
    .let _709288: (%core.I32) = %core.wrap.mul 0 (42:(%core.I32), s_635393_709277);
    .let _709311: (%core.I32) = %core.wrap.mul 0 (3:(%core.I32), s_635393_709277);
    pb_ret_635378_709222 (_709288, _709311)
};
.con inner_mul_deriv_cps_635298_709183 _709189: .Cn [(%core.I32), .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
    .con _709188 _709190: [(%core.I32), .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
        _709189 _709190
    };
    _709188 (126:(%core.I32), mul_pb_635361_709211)
};
.con .extern main __635710_709387::[mem_635729_709403: %mem.M, (%core.I32), %mem.Ptr (%mem.Ptr ((%core.I8), 0), 0), return_635714_709391: .Cn [%mem.M, (%core.I32)]] = {
    .con return_635714_709385 _709392: [%mem.M, (%core.I32)] = {
        return_635714_709391 _709392
    };
    .con aug_thrice_cont_635794_709328 _635970_709437::[_635972_709439: (%core.I32), .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
        .con comp_tup_pb__cont_635804_709379 _635869_709463::[(%core.I32), _635933_709464: (%core.I32)] = {
            .let _709450: (%core.I32) = %core.wrap.mul 0 (100:(%core.I32), _635972_709439);
            .let _709469: (%core.I32) = %core.wrap.add 0 (_709450, _635933_709464);
            return_635714_709385 (mem_635729_709403, _709469)
        };
        .con comp_tup_pb__cont_635797_709343 _635798_709363::[(%core.I32), _635800_709365: .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
            _635800_709365 (1:(%core.I32), comp_tup_pb__cont_635804_709379)
        };
        inner_mul_deriv_cps_635298_709183 comp_tup_pb__cont_635797_709343
    };
    inner_mul_deriv_cps_635298_709183 aug_thrice_cont_635794_709328
};
