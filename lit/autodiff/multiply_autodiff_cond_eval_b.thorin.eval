.import autodiff;
.import core;
.import debug;
.import direct;
.import mem;
.lam internal_diff_core_icmp_xYgLE_717038 __717062: .Nat → .Cn [«2; .Idx __717006», .Cn [(.Idx 2), .Cn [(.Idx 2), .Cn «2; .Idx __717006»]]] = {
    .con cmp_pb_717154 __717165::[(.Idx 2), pb_ret_717167: .Cn «2; .Idx __717062»] = {
        pb_ret_717167 ‹2; 0:.Idx __717062›
    };
    .con inner_cmp_717103 __717112::[__717130::[_717134: .Idx __717062, _717138: .Idx __717062], ret_717114: .Cn [(.Idx 2), .Cn [(.Idx 2), .Cn «2; .Idx __717062»]]] = {
        .let _717141: (.Idx 2) = %core.icmp.xYgLE __717130;
        ret_717114 (_717141, cmp_pb_717154)
    };
    0:(.Idx 2), _717180
};
.lam internal_diff_core_wrap_mul_717304 __717316::[_717400: .Nat, w_717317: .Nat] → .Cn [«2; .Idx w_717273», .Cn [.Idx w_717273, .Cn [.Idx w_717273, .Cn «2; .Idx w_717273»]]] = {
    .con inner_mul_deriv_cps_717362 __717367::[__717388::[_717392: .Idx w_717317, _717396: .Idx w_717317], ret_717369: .Cn [.Idx w_717317, .Cn [.Idx w_717317, .Cn «2; .Idx w_717317»]]] = {
        .con mul_pb_717413 __717422::[s_717437: .Idx w_717317, pb_ret_717424: .Cn «2; .Idx w_717317»] = {
            .let _717442: .Idx w_717317 = %core.wrap.mul (__717388#1:(.Idx 2), s_717437);
            .let _717452: .Idx w_717317 = %core.wrap.mul (__717388#0:(.Idx 2), s_717437);
            pb_ret_717424 (_717442, _717452)
        };
        .let _717403: .Idx w_717317 = %core.wrap.mul __717388;
        ret_717369 (_717403, mul_pb_717413)
    };
    0:(.Idx 2), ret_717456
};
.con tup_pb_717651 _717652::[[], _717654: .Cn (%core.I32)] = {
    _717654 0:(%core.I32)
};
.con .extern main __717508::[mem_717525: %mem.M, (%core.I32), %mem.Ptr (%mem.Ptr ((%core.I8), 0), 0), return_717512: .Cn [%mem.M, (%core.I32)]] = {
    .con aug_twice_cont_717489 _717566::[_717568: (%core.I32), .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
        .con comp_tup_pb__cont_717500 _717580::[(%core.I32), _717581: (%core.I32)] = {
            .let _717579: (%core.I32) = %core.wrap.mul 0 (100:(%core.I32), _717568);
            .let _717586: (%core.I32) = %core.wrap.add 0 (_717579, _717581);
            return_717512 (mem_717525, _717586)
        };
        .con comp_tup_pb__cont_717495 _717496::[(%core.I32), _717498: .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
            _717498 (1:(%core.I32), comp_tup_pb__cont_717500)
        };
        internal_diff_core_wrap_mul_717304 (0, 4294967296) ((2:(%core.I32), 4:(%core.I32)), comp_tup_pb__cont_717495)
    };
    .con aug_twice_717226 [.Cn [[], .Cn (%core.I32)]] = {
        internal_diff_core_wrap_mul_717304 (0, 4294967296) ((2:(%core.I32), 4:(%core.I32)), aug_twice_cont_717489)
    };
    .con aug_thrice_cont_717609 _717615::[_717617: (%core.I32), .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
        .con comp_tup_pb__cont_717614 _717629::[(%core.I32), _717630: (%core.I32)] = {
            .let _717628: (%core.I32) = %core.wrap.mul 0 (100:(%core.I32), _717617);
            .let _717635: (%core.I32) = %core.wrap.add 0 (_717628, _717630);
            return_717512 (mem_717525, _717635)
        };
        .con comp_tup_pb__cont_717610 _717611::[(%core.I32), _717613: .Cn [(%core.I32), .Cn «2; (%core.I32)»]] = {
            _717613 (1:(%core.I32), comp_tup_pb__cont_717614)
        };
        internal_diff_core_wrap_mul_717304 (0, 4294967296) ((3:(%core.I32), 4:(%core.I32)), comp_tup_pb__cont_717610)
    };
    .con aug_thrice_717597 [.Cn [[], .Cn (%core.I32)]] = {
        internal_diff_core_wrap_mul_717304 (0, 4294967296) ((3:(%core.I32), 4:(%core.I32)), aug_thrice_cont_717609)
    };
    .con main_cont_717213 _717645::[_717647: (.Idx 2), .Cn [(.Idx 2), .Cn «2; (%core.I32)»]] = {
        (aug_twice_717226, aug_thrice_717597)#_717647 tup_pb_717651
    };
    internal_diff_core_icmp_xYgLE_717038 4294967296 ((4:(%core.I32), 5:(%core.I32)), main_cont_717213)
};
