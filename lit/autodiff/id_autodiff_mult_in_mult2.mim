// RUN: rm -f %t.ll
// RUN: %mim -p direct %s --output-ll %t.ll -o - | %FileCheck %s

plugin core;
plugin autodiff;

fun f(a b:I32): I32 =
    let x = %core.wrap.mul 0 (a, b);
    return x;

con extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (I8, 0), 0), return : Cn [%mem.M, I32]] =
    let f_diff = %autodiff.ad f;
    let c      = (42I32, 43I32);
    f_diff (c,ret_cont)
    where
        con ret_cont [r:I32,pb:Cn[I32,Cn[I32,I32]]] =
            pb(1I32,pb_ret_cont)
            where
                con pb_ret_cont [pr_a:I32,pr_b:I32] =
                    let sr = %core.wrap.mul 0 (10000I32, r);
                    let sa = %core.wrap.mul 0 (100I32, pr_a);
                    let sb = pr_b;
                    let sp = %core.wrap.add 0 (sa, sb);
                    let o  = %core.wrap.add 0 (sr, sp);
                    return (mem, o);
            end;
    end;

// CHECK-DAG: return{{.*}}18064342
