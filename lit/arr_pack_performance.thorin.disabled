// RUN: %thorin %s -o -

// If compiling this takes forever, there is some loophole that Thorin does sth 100000000 times.
.import mem;

.let I32 = .Idx 4294967296;
.let size = 100000000;

.cn .extern main [mem: %mem.M, argc: I32, argv : %mem.Ptr («⊤:.Nat; %mem.Ptr («⊤:.Nat; .Idx 256», 0:.Nat)», 0:.Nat), return : .Cn [%mem.M, I32]] = {
    .let (alloc_mem, arr) = %mem.alloc (<<size; I32>>, 0) (mem);
    .let lea = %mem.lea (size, <size; I32>, 0) (arr, 0:(.Idx 100));
    .let (load_mem, val) = %mem.load (I32, 0) (alloc_mem, lea);

    return ( load_mem, 1:I32 )
};
