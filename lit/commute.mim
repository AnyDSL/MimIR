// RUN: %mim %s
plugin core;
plugin refly;

lam f1 (a b: Nat): Nat = %core.nat.add (a, b);
lam f2 (ab: «2; Nat»): Nat =
    let b = ab#1_2; // this provokes b->gid() < a->gid()
    let a = ab#0_2;
    %core.nat.add (a, b);

lam g1 (a: Nat) (b: Nat): Nat = %core.nat.add (a, b);
lam g2 (a: Nat) (b: Nat): Nat = %core.nat.add (a, b);

let _ = %refly.equiv.struc_eq (f1, f2);
let _ = %refly.equiv.alpha_eq (f1, f2);
let _ = %refly.equiv.struc_eq (g1, g2);
let _ = %refly.equiv.alpha_eq (g1, g2);
