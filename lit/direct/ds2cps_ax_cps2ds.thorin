// RUN: rm -f %t.ll ; \
// RUN: %thorin -d tool -d direct %s --output-ll %t.ll -o - | FileCheck %s

// tests a direct call to a cps fucntion wrapped in cps2ds
// ./build/bin/thorin -d tool -d direct ./lit/direct/ds2cps_ax_cps2ds.thorin --output-thorin - -VVVV
// ./build/bin/thorin -d tool -d direct ./lit/direct/ds2cps_ax_cps2ds.thorin --output-ll ./lit/direct/ds2cps_ax_cps2ds.ll -o - | FileCheck ./lit/direct/ds2cps_ax_cps2ds.thorin

.import direct;
.import mem;
.import core;

.let I32 = .Idx 4294967296;

.cn f [a:I32, return: .Cn I32] = {
    .let b = %core.wrap.add (0, 4294967296) (2:I32, a);
    return b
};

.cn .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (.Idx 256, 0), 0), return : .Cn [%mem.M, I32]] = {
    .let g = %direct.cps2ds (I32,I32) f;
    .let c = g (40:I32);
    return (mem, c)
};


// CHECK-DAG: .cn f_{{[0-9_]+}} __{{[0-9_]+}}::[a_{{[0-9_]+}}: (.Idx 4294967296), return_{{[0-9_]+}}: .Cn (.Idx 4294967296)] = {
// CHECK-DAG: .cn return_{{[0-9_]+}} _{{[0-9_]+}}: (.Idx 4294967296) = {
// CHECK-DAG: return_{{[0-9_]+}} _{{[0-9_]+}}
// CHECK-DAG: };
// CHECK-DAG: .let _{{[0-9_]+}}: (.Idx 4294967296) = %core.wrap.add (0, 4294967296) (2:(.Idx 4294967296), a_{{[0-9_]+}});
// CHECK-DAG: return_{{[0-9_]+}} _{{[0-9_]+}}
// CHECK-DAG: };
// CHECK-DAG: .cn .extern main __{{[0-9_]+}}::[mem_{{[0-9_]+}}: %mem.M, (.Idx 4294967296), %mem.Ptr (%mem.Ptr ((.Idx 256), 0), 0), return_{{[0-9_]+}}: .Cn [%mem.M, (.Idx 4294967296)]] = {
// CHECK-DAG: .cn return_{{[0-9_]+}} _{{[0-9_]+}}: [%mem.M, (.Idx 4294967296)] = {
// CHECK-DAG: return_{{[0-9_]+}} _{{[0-9_]+}}
// CHECK-DAG: };
// CHECK-DAG: .cn main_cont_{{[0-9_]+}} _{{[0-9_]+}}: (.Idx 4294967296) = {
// CHECK-DAG: return_{{[0-9_]+}} (mem_{{[0-9_]+}}, _{{[0-9_]+}})
// CHECK-DAG: };
// CHECK-DAG: f_{{[0-9_]+}} (40:(.Idx 4294967296), main_cont_{{[0-9_]+}})
// CHECK-DAG: };


/*
import core;
.import direct;
.import mem;
.import tool;
.cn f_303902 __303913::[a_303950: (.Idx 4294967296), return_303915: .Cn (.Idx 4294967296)] = {
    .cn return_303912 _303916: (.Idx 4294967296) = {
        return_303915 _303916
    };
    .let _303961: (.Idx 4294967296) = %core.wrap.add (0, 4294967296) (2:(.Idx 4294967296), a_303950);
    return_303912 _303961
};
.cn .extern main __303980::[mem_304004: %mem.M, (.Idx 4294967296), %mem.Ptr (%mem.Ptr ((.Idx 256), 0), 0), return_303984: .Cn [%mem.M, (.Idx 4294967296)]] = {
    .cn return_303979 _303985: [%mem.M, (.Idx 4294967296)] = {
        return_303984 _303985
    };
    .cn main_cont_303974 _304005: (.Idx 4294967296) = {
        return_303979 (mem_304004, _304005)
    };
    f_303902 (40:(.Idx 4294967296), main_cont_303974)
};
*/