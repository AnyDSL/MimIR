// RUN: rm -f %t.ll ; \
// RUN: %thorin -d direct %s --output-ll %t.ll --output-thorin - | FileCheck %s

// tests a direct call to a cps fucntion wrapped in cps2ds

.import direct;
.import mem;

.let I32 = %Int 4294967296;

.cn f [a:I32, return: .Cn I32] = {
    .let b = %Wrap_add (0:.Nat, 4294967296:.Nat) (2:I32, a);
    return b
};

.cn .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (%Int 256, 0:.Nat), 0:.Nat), return : .Cn [%mem.M, I32]] = {
    .let g = %direct.cps2ds (I32,I32) f;
    .let c = g (40:I32);
    return (mem, c)
};

// CHECK-DAG: .cn .extern main _{{[0-9_]+}}::[mem_[[memId:[_0-9]+]]: %mem.M, (%Int 4294967296), %mem.Ptr (%mem.Ptr ((%Int 256), 0:.Nat), 0:.Nat), return_[[returnId:[_0-9]+]]: .Cn [%mem.M, (%Int 4294967296)]] = {
// CHECK-DAG: _[[appId:[_0-9]+]]: ⊥:★ = return_[[returnEtaId:[_0-9]+]] (mem_[[memId]], 42:(%Int 4294967296));
// CHECK-DAG: _[[appId]]

// CHECK-DAG: return_[[returnEtaId]] _[[returnEtaVarId:[0-9_]+]]: [%mem.M, (%Int 4294967296)] = {
// CHECK-DAG: return_[[retAppId:[_0-9]*]]: ⊥:★ = return_[[returnId]] _[[returnEtaVarId]];
// CHECK-DAG: return_[[retAppId]]

