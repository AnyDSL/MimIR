// RUN: rm -f %t.ll ; \
// RUN: %thorin -d direct -d tool %s --output-ll %t.ll -o - | FileCheck %s

// tests a direct call to a cps fucntion wrapped in cps2ds
// ./build/bin/thorin -d direct -d tool ./lit/direct/ds2cps_ax_cps2ds_dependent2.thorin --output-thorin - -VVVV
// ./build/bin/thorin -d direct -d tool ./lit/direct/ds2cps_ax_cps2ds_dependent2.thorin --output-ll ./lit/direct/ds2cps_ax_cps2ds_dependent2.ll -o - | FileCheck ./lit/direct/ds2cps_ax_cps2ds_dependent2.thorin

.import direct;
.import core;
.import mem;

.let I32 = .Idx 4294967296;

.lam f [n:.Nat, w:.Nat] -> .Cn[.Idx n, .Cn[.Idx n]] = {
    .cn f_cont [a:(.Idx n), return: .Cn (.Idx n)] = {
        .let b = (42:(.Idx n));
        .let c = %core.wrap.add (w,n) (a,b);
        return c
    };
    f_cont
};

.lam U [a:I32] -> * = {
    I32
};

.cn .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (.Idx 256, 0:.Nat), 0:.Nat), return : .Cn [%mem.M, I32]] = {
    // .let g = %direct.cps2ds_dep (.Nat,U) f;
    .let n = 4294967296;
    .let c = %direct.cps2ds_dep (I32,U) (f (n, 0)) (5:(.Idx n));
    return (mem, c)
};

// CHECK-DAG: return{{.*}}47
