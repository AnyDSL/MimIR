// RUN: %mim %s
plugin vec;
plugin refly;

let res1 = %vec.fold.l %core.nat.add (0, (1, 2, 3, 4, 5));
let res2 = %vec.fold.r %core.nat.add ((1, 2, 3, 4, 5), 0);
let _ = %refly.equiv.struc_eq (res1, 15);
let _ = %refly.equiv.struc_eq (res2, 15);

let e1 = %vec.scan.exists (位 (n: Nat): Bool = %core.ncmp.e (n, 3)) (0, 1, 2, 3, 4);
let e2 = %vec.scan.exists (位 (n: Nat): Bool = %core.ncmp.e (n, 5)) (0, 1, 2, 3, 4);
let _ = %refly.equiv.struc_eq (e1, tt);
let _ = %refly.equiv.struc_eq (e2, ff);

let a1 = %vec.scan.for_all (位 (n: Nat): Bool = %core.ncmp.ge (n, 0)) (0, 1, 2, 3, 4);
let a2 = %vec.scan.for_all (位 (n: Nat): Bool = %core.ncmp.l  (n, 3)) (0, 1, 2, 3, 4);
let _ = %refly.equiv.struc_eq (a1, tt);
let _ = %refly.equiv.struc_eq (a2, ff);
