// RUN: rm -f %t.ll ; \
// RUN: %thorin -d affine %s --output-ll %t.ll -o - | FileCheck %s
// RUN: clang %t.ll -o %t -Wno-override-module
// RUN: %t ; test $? -eq 0
// RUN: %t 1 2 3 ; test $? -eq 6

.import core;
.import mem;
.import affine;

.con .extern main [mem : %mem.M, argc : .Idx 4294967296, argv : %mem.Ptr (%mem.Ptr (.Idx 4294967296, 0), 0), return : .Cn [%mem.M, .Idx 0]] = {
    .con for_exit [acc : [.Idx 4294967296, .Idx 0]] = {
        return (mem, acc#.tt)
    };

    .con for_body [i : .Idx 4294967296, acc : [.Idx 4294967296, .Idx 0], continue : .Cn [[.Idx 4294967296, .Idx 0]]] = {
        .let a : .Idx 4294967296 = %core.wrap.add 4294967296 0 (i, acc#.ff);
        .let b : .Idx 0 = %core.wrap.add 0 0 (%core.conv.u2u 4294967296 0 i, acc#.tt);
        continue (a, b)
    };
    %affine.For (4294967296, 2, (.Idx 4294967296, .Idx 0)) (0:(.Idx 4294967296), argc, 1:(.Idx 4294967296), (0:(.Idx 4294967296), 0:(.Idx 0)), for_body, for_exit)
};

// CHECK-NOT: affine.for
