// RUN: rm -f %t.ll ; \
// RUN: %thorin -d affine %s --output-ll %t.ll -o - | FileCheck %s
// RUN: clang %t.ll -o %t -Wno-override-module
// RUN: %t ; test $? -eq 0
// RUN: %t 1 2 3 ; test $? -eq 6

.import core;
.import math;
.import mem;
.import affine;

.let _32 = 4294967296;
.let I32 = .Idx _32;
.let f64 = (52, 11);
.let F64 = %math.F f64;

.con .extern main [mem : %mem.M, argc : I32, argv : %mem.Ptr (%mem.Ptr (I32, 0), 0), return : .Cn [%mem.M, .Idx 0]] = {
    .con for_exit [acc : [I32, F64]] = {
        return (mem, %math.conv.f2u f64 0 acc#.tt)
    };

    .con for_body [i : I32, [acc_a : I32, acc_b : F64], continue : .Cn [[I32, F64]]] = {
        .let a : I32 = %core.wrap.add 4294967296 0 (i, acc_a);
        .let b : F64 = %math.conv.u2f 0 f64 (%core.wrap.add 0 0 (%core.conv.u2u 4294967296 0 i, %math.conv.f2u f64 0 acc_b));
        continue (a, b)
    };
    %affine.For (4294967296, 2, (I32, F64)) (0:I32, argc, 1:I32, (0:I32, 0:F64), for_body, for_exit)
};

// CHECK-NOT: affine.for
// CHECK: %math.conv.f2u
