name: build-and-test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build and test on ${{matrix.os}} in ${{matrix.build-type}} mode
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        build-type: [Debug, Release]
        os: [ubuntu-latest, windows-2022]

    steps:
      - name: Clone recursively
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install newest g++ (ubuntu-latest only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test 
          sudo apt-get update
          sudo apt-get install g++-11
          sudo apt-get install valgrind
          export CXX=g++-11

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Configure
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} -v

      - name: Test with Valgrind (ubuntu-latest only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{matrix.build-type}} --output-on-failure -T memcheck

      - name: Test (all other builds)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        working-directory: ${{github.workspace}}/build
        run: ctest --verbose -C ${{matrix.build-type}} --output-on-failure
