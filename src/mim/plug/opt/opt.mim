/// # The opt Plugin {#opt}
///
/// @see mim::plug::opt
///
/// [TOC]
///
/// Manages the default compilation pipeline of Mim programs using plugins.
///
/// ## Dependencies
///
plugin core;
import phase;
import affine;
import autodiff;
import clos;
import direct;
import matrix;
import refly;
import regex;
///
/// ## Passes, Phases, and Pipelines
///
/// ### Pipelines
///
lam cond_phase {n: Nat} (name: «n; I8») (phase: %phase.Phase): %phase.Phase = %core.select (%phase.is_loaded name, phase, %phase.null_phase);
lam cond_pass  {n: Nat} (name: «n; I8») (pass:  %phase.Pass ): %phase.Pass  = %core.select (%phase.is_loaded name, pass , %phase.null_pass );

lam extern _default_compile []: %phase.Phase =
    %phase.phases ff (
        %phase.passes %phase.scalarize_pass,
        %phase.passes %phase.eta_red_pass,
        %phase.passes %phase.tail_rec_elim_pass,
        %phase.passes (cond_pass "regex" %regex.lower_regex),
        // optimize
        %phase.passes (
            optimization_passes,
            cond_pass "affine" %affine.lower_for_pass,
            mem_opt_passes,
        ),
        cond_phase "autodiff"
                (%phase.phases ff (
                    %phase.passes %autodiff.ad_eval_pass,
                    %phase.passes %autodiff.ad_zero_pass,
                )),
        cond_phase "direct" direct_phases,
        cond_phase "matrix"
                (%phase.phases ff (
                    matrix_lower_phase,
                    cond_phase "direct" direct_phases,
                    cond_phase "affine" (%phase.passes %affine.lower_for_pass))),
        %phase.internal_cleanup_phase,
        cond_phase "clos" clos_phases,
        %phase.passes %phase.lam_spec_pass,
        cond_phase "autodiff" ad_cleanup_phase,
        // CodeGenPrep
        %phase.passes (
            %phase.ret_wrap_pass,
            %mem.remem_elim_pass,
            %mem.alloc2malloc_pass,
            cond_pass "refly" %refly.remove_dbg_perm_pass,
        )
    );
