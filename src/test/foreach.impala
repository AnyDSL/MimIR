def primes(n : int, ret : pi(int)) {
    ret(n);
}

def count<T>(n : int, t : T, yield : pi(int, T, pi(T)), ret : pi(T)) {
    yield(1, t, lambda(t : T) {
        def loop(i : int, t : T) {
            if (i < n)
                yield(i, t, lambda(t : T) { loop(i+1, t); });
            else
                ret(t);
        }
        loop(2, t);
    });
}

def extern foo(n : int) -> int {
    a : int = 0;
    for (i : int = 0; i < n; ++i)
        ++a;

    //x : int = 42;
    // x as expression fails
    b : int = 2;
    foreach (x : int  <- count(10)) {
        b += x;
    }

    return a;
}
