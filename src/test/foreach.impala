def primes(n : int, ret : pi(int)) {
    ret(n);
}

def count(n : int, yield : pi(int, pi()), ret : pi()) {
    yield(1, lambda() {
        def loop(i : int) {
            if (i < n)
                yield(i, lambda() { loop(i+1); });
            else
                ret();
        }
        loop(2);
    });
}

def extern foo(n : int) -> int {
    a : int = 0;
    for (i : int = 0; i < n; ++i)
        ++a;

    //count(10, lambda(i : int, next: pi()) { next(); }, lambda() {});

    //x : int = 42;
    // x as expression fails
    b : int = 2;
    foreach (x : int  <- count(10)) {
        b += x;
    }

    return a;
}
