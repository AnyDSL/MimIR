def fac_while(n : int) -> int 
{
    if (n == 0) 
        return 1;
    if (n == 1) 
        return 1;

    r : int := 1;
    i : int := 2;
    while (i <= n) {
        r *= i;
        ++i;
    }

    return r;
}

def fac_my_while(n : int) -> int 
{
    if (n == 0) 
        return 1;
    if (n == 1) 
        return 1;

    r : int := 1;
    i : int := 2;

    def head(ir : #(int, int), ret : pi(#(int, int, bool))) {
        i : int := ir[0];
        r : int := ir[1];
        return #(i, r, i <= n);
    }
    def body(ir : #(int, int), ret : pi(#(int, int))) {
        i : int := ir[0];
        r : int := ir[1];
        r *= i;
        ++i;
        return #(i, r);
    }
    def next(r) -> noret {
        //...
    }
    my_while(head, body, next);


    n = 42;
}

def my_while<L, O>(l : L,
                head : pi(L, pi(#(L, bool)), 
                body : pi(L, pi(L)), 
                next : pi(O)) 
{
    h : #(L, bool) := head(l);

    if (h[1]) {
        b : L := body(l);
        my_while(b, head, body, next);
    } else {
        next(l);
    }
}

