
[36mfac[m = lambda([34mn[m : u32, [36m<return>[m : pi(u32)) : pi(u32, pi(u32)) extern 
    jump(select : pi() (cmp_eq : u1 ([34mn[m : u32, 0 : u32), [33m<if-then-00>[m : pi(), [35m<if-else-00>[m : pi()), [])

    [35m<if-else-00>[m = lambda() : pi()
        jump(select : pi() (cmp_eq : u1 ([34mn[m : u32, 1 : u32), [36m<if-then-01>[m : pi(), [32m<if-else-01>[m : pi()), [])
    
        [32m<if-else-01>[m = lambda() : pi()
            jump([31m<for-head-00>[m : pi(u32, u32, u32), [2 : u32, [34mn[m : u32, 1 : u32])
        
            [31m<for-head-00>[m = lambda([35mi[m : u32, [32mn[m : u32, [32mr[m : u32) : pi(u32, u32, u32)
                jump(select : pi() (cmp_sle : u1 ([35mi[m : u32, [34mn[m : u32), [36m<for-body-00>[m : pi(), [32m<for-next-00>[m : pi()), [])
            
                [32m<for-next-00>[m = lambda() : pi()
                    jump([36m<return>[m : pi(u32), [[32mr[m : u32])
                
                [36m<for-body-00>[m = lambda() : pi()
                    jump([33m<for-step-00>[m : pi(), [])
                
                    [33m<for-step-00>[m = lambda() : pi()
                        jump([31m<for-head-00>[m : pi(u32, u32, u32), [add : u32 (1 : u32, [35mi[m : u32), [34mn[m : u32, mul : u32 ([35mi[m : u32, [32mr[m : u32)])
                    
        [36m<if-then-01>[m = lambda() : pi()
            jump([36m<return>[m : pi(u32), [1 : u32])
        
    [33m<if-then-00>[m = lambda() : pi()
        jump([36m<return>[m : pi(u32), [1 : u32])
    
recurse node: fac
root: <if-then-00>
	<if-then-00>
header: <if-then-00>
root: <if-then-01>
	<if-then-01>
header: <if-then-01>
root: <for-next-00>
	<for-next-00>
header: <for-next-00>
root: <for-head-00>
	<for-step-00>
	<for-body-00>
	<for-head-00>
header: <for-head-00>
root: <if-else-01>
	<if-else-01>
header: <if-else-01>
root: <if-else-00>
	<if-else-00>
header: <if-else-00>
root: fac
	fac
header: fac
mark as header: <if-then-00>
mark as header: <if-then-01>
mark as header: <for-next-00>
mark as header: <for-head-00>
mark as header: <if-else-01>
mark as header: <if-else-00>
mark as header: fac
