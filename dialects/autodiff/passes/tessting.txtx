diffee->dump(100)
.cn .extern gmm _414410::[mem_414412: %mem.M, _415416: .Idx 4294967296, alphas_414440: %mem.Ptr (<<xe2x8axa4:.Nat; %math.F (52, 11)>>, 0), return_414501: .Cn [%mem.M, %math.F (52, 11)]] = {
    .let sum_414414: [%mem.M, %mem.Ptr (%math.F (52, 11), 0)] = %mem.slot (%math.F (52, 11), 0) (mem_414412, 370577);
    .let _414425: %mem.M = %mem.store (%math.F (52, 11), 0) (sum_414414#0:(.Idx 2), sum_414414#1:(.Idx 2), 4607182418800017408:(%math.F (52, 11)));
    %affine.For (4294967296, 1, %mem.M) (0:(.Idx 4294967296), 4:(.Idx 4294967296), 1:(.Idx 4294967296), _414425, lambda_414426, break_414498)
};
.cn lambda_414426 _414427::[_415468: .Idx 4294967296, _414429: %mem.M, _414493: .Cn %mem.M] = {
    %affine.For (4294967296, 1, %mem.M) (0:(.Idx 4294967296), 4:(.Idx 4294967296), 1:(.Idx 4294967296), _414429, lambda_414430, _414491)
};
.cn break_414498 _414504: %mem.M = {
    .let _414512: [%mem.M, %math.F (52, 11)] = %mem.load (%math.F (52, 11), 0) (_414504, sum_414414#1:(.Idx 2));
    return_414499 _414512
};
.cn lambda_414430 _414432::[_414442: .Idx 4294967296, _414438: %mem.M, _414434: .Cn %mem.M] = {
    .let _414443: .Idx xe2x8axa4:.Nat = %core.conv.u2u 4294967296 xe2x8axa4:.Nat _414442;
    .let _414453: %mem.Ptr (%math.F (52, 11), 0) = %mem.lea (xe2x8axa4:.Nat, <xe2x8axa4:.Nat; %math.F (52, 11)>, 0) (alphas_414440, _414443);
    .let _414461: [%mem.M, %math.F (52, 11)] = %mem.load (%math.F (52, 11), 0) (_414438, _414453);
    .let _414471: [%mem.M, %math.F (52, 11)] = %mem.load (%math.F (52, 11), 0) (_414461#0:(.Idx 2), sum_414414#1:(.Idx 2));
    .let _414482: %math.F (52, 11) = %math.arith.mul (52, 11) 0 (_414461#1:(.Idx 2), _414471#1:(.Idx 2));
    .let _414489: %mem.M = %mem.store (%math.F (52, 11), 0) (_414471#0:(.Idx 2), sum_414414#1:(.Idx 2), _414482);
    _414431 _414489
};
.cn _414491 _414494: %mem.M = {
    _414493 _414494
};
.cn return_414499 _414502::[_415441: %mem.M, _415446: %math.F (52, 11)] = {
    return_414501 _414502
};
.cn _414431 _414435: %mem.M = {
    _414434 _414435
};
