/// # The opt dialect {#opt}
///
/// [TOC]
///
/// Manages the default compilation pipeline of Thorin programs using dialects.
///
/// ## Dependencies
///
.import core; // includes mem, compile (and avoids clashing re-import)
/// supported dialects with passes
.import affine;
.import autodiff;
.import clos;
.import direct;
.import refly;
///
/// ## Compilation passes, phases, and pipelines
///
/// ### Pipelines
/// 
.lam .extern _default_compile [] -> Pipeline = {
    .let nullptr = %compile.nullptr_pass;
    .let nullphase = %compile.single_pass_phase nullptr;
    %compile.pipe
        nullphase
        (%compile.single_pass_phase (%compile.scalerize_pass nullptr))
        (%compile.single_pass_phase %compile.eta_red_pass)
        (%compile.single_pass_phase (%compile.tail_rec_elim_pass nullptr))
        // optimize
        (%compile.pass_phase 
          (%compile.combine_pass_list (⊤:.Nat)
          (
            optimization_pass_list,
            %compile.pass_list
              (dialect_cond_pass (%compile.affine_dialect, %affine.lower_for_pass)),
            mem_opt_pass_list
          ))
        )
        (dialect_cond_phase (%compile.autodiff_dialect,
          %compile.combined_phase (%compile.phase_list
            (%compile.single_pass_phase %autodiff.ad_eval_pass)
            // optimization_phase
            (%compile.single_pass_phase %autodiff.ad_zero_pass)
          )
        ))
        (dialect_cond_phase (%compile.direct_dialect,
          direct_phases
        ))
        (%compile.single_pass_phase %compile.internal_cleanup_pass)
        (dialect_cond_phase (%compile.clos_dialect,
          clos_phases
        ))
        (%compile.single_pass_phase %compile.lam_spec_pass)
        (dialect_cond_phase (%compile.autodiff_dialect,
          ad_cleanup_phase
        ))
        // CodeGenPrep
        (%compile.pass_phase 
          (%compile.combine_pass_list (⊤:.Nat)
          (
            %compile.pass_list
              %compile.ret_wrap_pass,
            // mem
            %compile.pass_list
              %mem.remem_elim_pass
              %mem.alloc2malloc_pass,
            %compile.pass_list
              (dialect_cond_pass (%compile.refly_dialect, %refly.remove_dbg_perm_pass)),
          ))
        )
};
