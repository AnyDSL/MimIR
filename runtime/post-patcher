#!/usr/bin/env python
import sys, re
rttype, basename = sys.argv[1:]

if rttype in ("nvvm", "spir"):
    # we need to patch
    result = []
    with open(basename+"."+rttype) as f:
        for line in f:
            # patch to opaque identity functions
            m = re.match('^declare (\[.*\]\*) @(magic_.*_id)\((\[.*\]\*)\)\n$', line)
            if m is not None:
                ty1, fname, ty2 = m.groups()
                assert ty1 == ty2, "Argument and return types of magic IDs must match"
                print("Patching magic ID {0}".format(fname))
                # emit definition instead
                result.append('define {0} @{1}({0} %name) {{\n'.format(ty1, fname))
                result.append('  ret {0} %name\n'.format(ty1))
                result.append('}\n')
            # get rid of attributes
            elif 'attributes #0' in line:
                print("Removing attribute declarations")
                # ignore this line
                pass
            # it's a normal line, keep it but apply substitutions
            else:
                line = line.replace('#0', '')
                result.append(line)
    # we have the patched thing, write it
    with open(basename+"."+rttype, "w") as f:
        for line in result:
            f.write(line)

