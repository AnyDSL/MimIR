extern accelerator([float], fn(fn() -> int, fn() -> int, fn() -> int, fn() -> int, fn() -> int, fn() -> int) -> void) -> void;
extern array(int) -> [float];

fn main() -> [float] {
    let width   = 1024;
    let mut arr     = array(width);
    let mut out     = array(width);

    accelerator(out, |x : fn() -> int, y : fn() -> int, bIx : fn() -> int, bIy : fn() -> int, bDx : fn() -> int, bDy : fn() -> int| -> void {
        out[x()] = arr[x()];
    });

    return out;
}
