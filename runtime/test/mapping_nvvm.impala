extern nvvm((int, int, int), (int, int, int), fn() -> void) -> void;

fn iteration(width : int, height : int, body : fn(int) -> void) -> void {
    let dim = (width, height, 1);
    let block = (32, 4, 1);

    nvvm(dim, block, || -> void {
        let tid_x = nvvm_read_ptx_sreg_tid_x() + nvvm_read_ptx_sreg_ntid_x() * nvvm_read_ptx_sreg_ctaid_x();
        let tid_y = nvvm_read_ptx_sreg_tid_y() + nvvm_read_ptx_sreg_ntid_y() * nvvm_read_ptx_sreg_ctaid_y();
        let index = tid_y * width + tid_x;

        body(index);
    });
}

fn iteration_advanced(width : int, height : int, body : fn(int) -> void) -> void {
    let unroll = 1;
    let dim = (width, height/unroll, 1);
    let block = (128, 1, 1);

    nvvm(dim, block, || -> void {
        let tid_x = nvvm_read_ptx_sreg_tid_x() + nvvm_read_ptx_sreg_ntid_x() * nvvm_read_ptx_sreg_ctaid_x();
        let tid_y = nvvm_read_ptx_sreg_tid_y() + nvvm_read_ptx_sreg_ntid_y() * nvvm_read_ptx_sreg_ctaid_y() * unroll;

        //@iterate(0, unroll+1, |i : int| -> void {
        iterate(0, unroll+1, |i : int| -> void {
            let index = (tid_y + i * nvvm_read_ptx_sreg_ntid_y()) * width + tid_x;
            body(index);
        });
    });
}

