fn iteration(width : int, height : int, body : fn(int, int) -> void) -> void {
    let vector_length = 4;
    for (let mut y=0; y<height; ++y) {
        vectorized(width, vector_length, || -> void {
            let x = wfv_get_tid();
            body(x, y);
        });
    }
}

fn iteration_bounds(wlower : int, wupper : int, hlower : int, hupper : int,
                    body : fn(int, int, int, int) -> void) -> void {
    let vector_length = 4;
    for (let mut y=hlower; y<hupper; ++y) {
        vectorized(wupper - wlower, vector_length, || -> void {
            let x = wfv_get_tid() + wlower;
            body(x, y, wupper - wlower, hupper - hlower);
        });
    }
}
