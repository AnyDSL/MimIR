extern "thorin" {
    fn sizeof[T]() -> i32;

    fn bitcast[D, S](S) -> D;
    fn select[T,U](T, U, U) -> U;
    fn shuffle[T](T, T, T) -> T;

    fn cuda(i32, (i32, i32, i32), (i32, i32, i32), fn() -> ()) -> ();
    fn nvvm(i32, (i32, i32, i32), (i32, i32, i32), fn() -> ()) -> ();
    fn spir(i32, (i32, i32, i32), (i32, i32, i32), fn() -> ()) -> ();
    fn opencl(i32, (i32, i32, i32), (i32, i32, i32), fn() -> ()) -> ();
    fn reserve_shared[T](i32) -> &[3][T];

    fn parallel(num_threads: i32, lower: i32, upper: i32, body: fn(i32) -> ()) -> ();
    fn spawn(body: fn() -> ()) -> i32;
    fn sync(id: i32) -> ();

    fn atomic(u32, &i32, i32) -> i32;

    fn vectorize(vector_length: i32, lower: i32, upper: i32, body: fn(i32) -> ()) -> ();
}
