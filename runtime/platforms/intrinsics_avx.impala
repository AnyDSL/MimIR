extern "C" {
    fn wfv_get_tid() -> int;
    fn expf(float) -> float;
    fn sqrtf(float) -> float;
    fn fabsf(float) -> float;
    fn tanf(float) -> float;
    fn atan2f(float, float) -> float;
    fn sinf(float) -> float;
    fn cosf(float) -> float;
}

fn get_vector_length() -> int { 8 }
fn inner_loop(a : int, b : int, yield : fn(int, fn())) -> () {
    for vectorized(b-a, @get_vector_length()) {
        let x = wfv_get_tid() + a;
        @yield(x);
    }
}
