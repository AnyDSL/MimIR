extern "llvm" {
    fn nvvm_read_ptx_sreg_ctaid_x() -> i32;
    fn nvvm_read_ptx_sreg_ctaid_y() -> i32;
    fn nvvm_read_ptx_sreg_ctaid_z() -> i32;
    fn nvvm_read_ptx_sreg_nctaid_x() -> i32;
    fn nvvm_read_ptx_sreg_nctaid_y() -> i32;
    fn nvvm_read_ptx_sreg_nctaid_z() -> i32;
    fn nvvm_read_ptx_sreg_ntid_x() -> i32;
    fn nvvm_read_ptx_sreg_ntid_y() -> i32;
    fn nvvm_read_ptx_sreg_ntid_z() -> i32;
    fn nvvm_read_ptx_sreg_tid_x() -> i32;
    fn nvvm_read_ptx_sreg_tid_y() -> i32;
    fn nvvm_read_ptx_sreg_tid_z() -> i32;
    fn nvvm_read_ptx_sreg_warpsize() -> i32;
    fn nvvm_barrier0() -> ();

    fn nvvm_abs_i(i32) -> i32;
    fn nvvm_abs_ll(i64) -> i64;
    fn nvvm_add_rm_d(double, double) -> double;
    fn nvvm_add_rm_f(float, float) -> float;
    fn nvvm_add_rm_ftz_f(float, float) -> float;
    fn nvvm_add_rn_d(double, double) -> double;
    fn nvvm_add_rn_f(float, float) -> float;
    fn nvvm_add_rn_ftz_f(float, float) -> float;
    fn nvvm_add_rp_d(double, double) -> double;
    fn nvvm_add_rp_f(float, float) -> float;
    fn nvvm_add_rp_ftz_f(float, float) -> float;
    fn nvvm_add_rz_d(double, double) -> double;
    fn nvvm_add_rz_f(float, float) -> float;
    fn nvvm_add_rz_ftz_f(float, float) -> float;
    fn nvvm_barrier0_and(i32) -> i32;
    fn nvvm_barrier0_or(i32) -> i32;
    fn nvvm_barrier0_popc(i32) -> i32;
    fn nvvm_bitcast_d2ll(double) -> i64;
    fn nvvm_bitcast_f2i(float) -> i32;
    fn nvvm_bitcast_i2f(i32) -> float;
    fn nvvm_bitcast_ll2d(i64) -> double;
    fn nvvm_brev32(i32) -> i32;
    fn nvvm_brev64(i64) -> i64;
    fn nvvm_ceil_d(double) -> double;
    fn nvvm_ceil_f(float) -> float;
    fn nvvm_ceil_ftz_f(float) -> float;
    fn nvvm_clz_i(i32) -> i32;
    fn nvvm_clz_ll(i64) -> i32;
    fn nvvm_cos_approx_f(float) -> float;
    fn nvvm_cos_approx_ftz_f(float) -> float;
    fn nvvm_d2f_rm(double) -> float;
    fn nvvm_d2f_rm_ftz(double) -> float;
    fn nvvm_d2f_rn(double) -> float;
    fn nvvm_d2f_rn_ftz(double) -> float;
    fn nvvm_d2f_rp(double) -> float;
    fn nvvm_d2f_rp_ftz(double) -> float;
    fn nvvm_d2f_rz(double) -> float;
    fn nvvm_d2f_rz_ftz(double) -> float;
    fn nvvm_d2i_hi(double) -> i32;
    fn nvvm_d2i_lo(double) -> i32;
    fn nvvm_d2i_rm(double) -> i32;
    fn nvvm_d2i_rn(double) -> i32;
    fn nvvm_d2i_rp(double) -> i32;
    fn nvvm_d2i_rz(double) -> i32;
    fn nvvm_d2ll_rm(double) -> i64;
    fn nvvm_d2ll_rn(double) -> i64;
    fn nvvm_d2ll_rp(double) -> i64;
    fn nvvm_d2ll_rz(double) -> i64;
    fn nvvm_d2ui_rm(double) -> i32;
    fn nvvm_d2ui_rn(double) -> i32;
    fn nvvm_d2ui_rp(double) -> i32;
    fn nvvm_d2ui_rz(double) -> i32;
    fn nvvm_d2ull_rm(double) -> i64;
    fn nvvm_d2ull_rn(double) -> i64;
    fn nvvm_d2ull_rp(double) -> i64;
    fn nvvm_d2ull_rz(double) -> i64;
    fn nvvm_div_approx_f(float, float) -> float;
    fn nvvm_div_approx_ftz_f(float, float) -> float;
    fn nvvm_div_rm_d(double, double) -> double;
    fn nvvm_div_rm_f(float, float) -> float;
    fn nvvm_div_rm_ftz_f(float, float) -> float;
    fn nvvm_div_rn_d(double, double) -> double;
    fn nvvm_div_rn_f(float, float) -> float;
    fn nvvm_div_rn_ftz_f(float, float) -> float;
    fn nvvm_div_rp_d(double, double) -> double;
    fn nvvm_div_rp_f(float, float) -> float;
    fn nvvm_div_rp_ftz_f(float, float) -> float;
    fn nvvm_div_rz_d(double, double) -> double;
    fn nvvm_div_rz_f(float, float) -> float;
    fn nvvm_div_rz_ftz_f(float, float) -> float;
    fn nvvm_ex2_approx_d(double) -> double;
    fn nvvm_ex2_approx_f(float) -> float;
    fn nvvm_ex2_approx_ftz_f(float) -> float;
    fn nvvm_f2h_rn(float) -> int16;
    fn nvvm_f2h_rn_ftz(float) -> int16;
    fn nvvm_f2i_rm(float) -> i32;
    fn nvvm_f2i_rm_ftz(float) -> i32;
    fn nvvm_f2i_rn(float) -> i32;
    fn nvvm_f2i_rn_ftz(float) -> i32;
    fn nvvm_f2i_rp(float) -> i32;
    fn nvvm_f2i_rp_ftz(float) -> i32;
    fn nvvm_f2i_rz(float) -> i32;
    fn nvvm_f2i_rz_ftz(float) -> i32;
    fn nvvm_f2ll_rm(float) -> i64;
    fn nvvm_f2ll_rm_ftz(float) -> i64;
    fn nvvm_f2ll_rn(float) -> i64;
    fn nvvm_f2ll_rn_ftz(float) -> i64;
    fn nvvm_f2ll_rp(float) -> i64;
    fn nvvm_f2ll_rp_ftz(float) -> i64;
    fn nvvm_f2ll_rz(float) -> i64;
    fn nvvm_f2ll_rz_ftz(float) -> i64;
    fn nvvm_f2ui_rm(float) -> i32;
    fn nvvm_f2ui_rm_ftz(float) -> i32;
    fn nvvm_f2ui_rn(float) -> i32;
    fn nvvm_f2ui_rn_ftz(float) -> i32;
    fn nvvm_f2ui_rp(float) -> i32;
    fn nvvm_f2ui_rp_ftz(float) -> i32;
    fn nvvm_f2ui_rz(float) -> i32;
    fn nvvm_f2ui_rz_ftz(float) -> i32;
    fn nvvm_f2ull_rm(float) -> i64;
    fn nvvm_f2ull_rm_ftz(float) -> i64;
    fn nvvm_f2ull_rn(float) -> i64;
    fn nvvm_f2ull_rn_ftz(float) -> i64;
    fn nvvm_f2ull_rp(float) -> i64;
    fn nvvm_f2ull_rp_ftz(float) -> i64;
    fn nvvm_f2ull_rz(float) -> i64;
    fn nvvm_f2ull_rz_ftz(float) -> i64;
    fn nvvm_fabs_d(double) -> double;
    fn nvvm_fabs_f(float) -> float;
    fn nvvm_fabs_ftz_f(float) -> float;
    fn nvvm_floor_d(double) -> double;
    fn nvvm_floor_f(float) -> float;
    fn nvvm_floor_ftz_f(float) -> float;
    fn nvvm_fma_rm_d(double, double, double) -> double;
    fn nvvm_fma_rm_f(float, float, float) -> float;
    fn nvvm_fma_rm_ftz_f(float, float, float) -> float;
    fn nvvm_fma_rn_d(double, double, double) -> double;
    fn nvvm_fma_rn_f(float, float, float) -> float;
    fn nvvm_fma_rn_ftz_f(float, float, float) -> float;
    fn nvvm_fma_rp_d(double, double, double) -> double;
    fn nvvm_fma_rp_f(float, float, float) -> float;
    fn nvvm_fma_rp_ftz_f(float, float, float) -> float;
    fn nvvm_fma_rz_d(double, double, double) -> double;
    fn nvvm_fma_rz_f(float, float, float) -> float;
    fn nvvm_fma_rz_ftz_f(float, float, float) -> float;
    fn nvvm_fmax_d(double, double) -> double;
    fn nvvm_fmax_f(float, float) -> float;
    fn nvvm_fmax_ftz_f(float, float) -> float;
    fn nvvm_fmin_d(double, double) -> double;
    fn nvvm_fmin_f(float, float) -> float;
    fn nvvm_fmin_ftz_f(float, float) -> float;
    fn nvvm_h2f(int16) -> float;
    fn nvvm_i2d_rm(i32) -> double;
    fn nvvm_i2d_rn(i32) -> double;
    fn nvvm_i2d_rp(i32) -> double;
    fn nvvm_i2d_rz(i32) -> double;
    fn nvvm_i2f_rm(i32) -> float;
    fn nvvm_i2f_rn(i32) -> float;
    fn nvvm_i2f_rp(i32) -> float;
    fn nvvm_i2f_rz(i32) -> float;
    fn nvvm_lg2_approx_d(double) -> double;
    fn nvvm_lg2_approx_f(float) -> float;
    fn nvvm_lg2_approx_ftz_f(float) -> float;
    fn nvvm_ll2d_rm(i64) -> double;
    fn nvvm_ll2d_rn(i64) -> double;
    fn nvvm_ll2d_rp(i64) -> double;
    fn nvvm_ll2d_rz(i64) -> double;
    fn nvvm_ll2f_rm(i64) -> float;
    fn nvvm_ll2f_rn(i64) -> float;
    fn nvvm_ll2f_rp(i64) -> float;
    fn nvvm_ll2f_rz(i64) -> float;
    fn nvvm_lohi_i2d(i32, i32) -> double;
    fn nvvm_max_i(i32, i32) -> i32;
    fn nvvm_max_ll(i64, i64) -> i64;
    fn nvvm_max_ui(i32, i32) -> i32;
    fn nvvm_max_ull(i64, i64) -> i64;
    fn nvvm_membar_cta() -> ();
    fn nvvm_membar_gl() -> ();
    fn nvvm_membar_sys() -> ();
    fn nvvm_min_i(i32, i32) -> i32;
    fn nvvm_min_ll(i64, i64) -> i64;
    fn nvvm_min_ui(i32, i32) -> i32;
    fn nvvm_min_ull(i64, i64) -> i64;
    fn nvvm_move_double(double) -> double;
    fn nvvm_move_float(float) -> float;
    fn nvvm_move_i16(int16) -> int16;
    fn nvvm_move_i32(i32) -> i32;
    fn nvvm_move_i64(i64) -> i64;
    fn nvvm_mul24_i(i32, i32) -> i32;
    fn nvvm_mul24_ui(i32, i32) -> i32;
    fn nvvm_mul_rm_d(double, double) -> double;
    fn nvvm_mul_rm_f(float, float) -> float;
    fn nvvm_mul_rm_ftz_f(float, float) -> float;
    fn nvvm_mul_rn_d(double, double) -> double;
    fn nvvm_mul_rn_f(float, float) -> float;
    fn nvvm_mul_rn_ftz_f(float, float) -> float;
    fn nvvm_mul_rp_d(double, double) -> double;
    fn nvvm_mul_rp_f(float, float) -> float;
    fn nvvm_mul_rp_ftz_f(float, float) -> float;
    fn nvvm_mul_rz_d(double, double) -> double;
    fn nvvm_mul_rz_f(float, float) -> float;
    fn nvvm_mul_rz_ftz_f(float, float) -> float;
    fn nvvm_mulhi_i(i32, i32) -> i32;
    fn nvvm_mulhi_ll(i64, i64) -> i64;
    fn nvvm_mulhi_ui(i32, i32) -> i32;
    fn nvvm_mulhi_ull(i64, i64) -> i64;
    fn nvvm_popc_i(i32) -> i32;
    fn nvvm_popc_ll(i64) -> i32;
    fn nvvm_prmt(i32, i32, i32) -> i32;
    fn nvvm_rcp_approx_ftz_d(double) -> double;
    fn nvvm_rcp_rm_d(double) -> double;
    fn nvvm_rcp_rm_f(float) -> float;
    fn nvvm_rcp_rm_ftz_f(float) -> float;
    fn nvvm_rcp_rn_d(double) -> double;
    fn nvvm_rcp_rn_f(float) -> float;
    fn nvvm_rcp_rn_ftz_f(float) -> float;
    fn nvvm_rcp_rp_d(double) -> double;
    fn nvvm_rcp_rp_f(float) -> float;
    fn nvvm_rcp_rp_ftz_f(float) -> float;
    fn nvvm_rcp_rz_d(double) -> double;
    fn nvvm_rcp_rz_f(float) -> float;
    fn nvvm_rcp_rz_ftz_f(float) -> float;
    fn nvvm_round_d(double) -> double;
    fn nvvm_round_f(float) -> float;
    fn nvvm_round_ftz_f(float) -> float;
    fn nvvm_rsqrt_approx_d(double) -> double;
    fn nvvm_rsqrt_approx_f(float) -> float;
    fn nvvm_rsqrt_approx_ftz_f(float) -> float;
    fn nvvm_sad_i(i32, i32, i32) -> i32;
    fn nvvm_sad_ui(i32, i32, i32) -> i32;
    fn nvvm_saturate_d(double) -> double;
    fn nvvm_saturate_f(float) -> float;
    fn nvvm_saturate_ftz_f(float) -> float;
    fn nvvm_sin_approx_f(float) -> float;
    fn nvvm_sin_approx_ftz_f(float) -> float;
    fn nvvm_sqrt_approx_f(float) -> float;
    fn nvvm_sqrt_approx_ftz_f(float) -> float;
    fn nvvm_sqrt_f(float) -> float;
    fn nvvm_sqrt_rm_d(double) -> double;
    fn nvvm_sqrt_rm_f(float) -> float;
    fn nvvm_sqrt_rm_ftz_f(float) -> float;
    fn nvvm_sqrt_rn_d(double) -> double;
    fn nvvm_sqrt_rn_f(float) -> float;
    fn nvvm_sqrt_rn_ftz_f(float) -> float;
    fn nvvm_sqrt_rp_d(double) -> double;
    fn nvvm_sqrt_rp_f(float) -> float;
    fn nvvm_sqrt_rp_ftz_f(float) -> float;
    fn nvvm_sqrt_rz_d(double) -> double;
    fn nvvm_sqrt_rz_f(float) -> float;
    fn nvvm_sqrt_rz_ftz_f(float) -> float;
    fn nvvm_trunc_d(double) -> double;
    fn nvvm_trunc_f(float) -> float;
    fn nvvm_trunc_ftz_f(float) -> float;
    fn nvvm_ui2d_rm(i32) -> double;
    fn nvvm_ui2d_rn(i32) -> double;
    fn nvvm_ui2d_rp(i32) -> double;
    fn nvvm_ui2d_rz(i32) -> double;
    fn nvvm_ui2f_rm(i32) -> float;
    fn nvvm_ui2f_rn(i32) -> float;
    fn nvvm_ui2f_rp(i32) -> float;
    fn nvvm_ui2f_rz(i32) -> float;
    fn nvvm_ull2d_rm(i64) -> double;
    fn nvvm_ull2d_rn(i64) -> double;
    fn nvvm_ull2d_rp(i64) -> double;
    fn nvvm_ull2d_rz(i64) -> double;
    fn nvvm_ull2f_rm(i64) -> float;
    fn nvvm_ull2f_rn(i64) -> float;
    fn nvvm_ull2f_rp(i64) -> float;
    fn nvvm_ull2f_rz(i64) -> float;
}

extern "raw" {
    fn __nv_expf(float) -> float;
}

fn expf(a: float) -> float { __nv_expf(a) }

